{"version":3,"sources":["app.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","factory","$rootScope","COLS","CONTRACT","DATE","TIME","AMOUNT","exports","data","parsedData","selectedDate","parseData","getCol","colNum","isExcludeTitle","result","start","i","length","row","push","getContractCol","getDateCol","getTimeCol","getAmountCol","$watch","value","oldValue","state","url","templateUrl","controller","$scope","DataFactory","isUtc","_getDaysInMonth","month","year","date","Date","isUTC","getUTCDate","getDate","_getDays","monthNum","yearNum","from","to","_getMonthNumber","datetime","getUTCMonth","getMonth","_getYearNumber","getUTCFullYear","getFullYear","_getMonthList","dateTimesList","dates","years","setUTC","setDates","datesCol","datesRegexp","RegExp","dateString","parsed","match","getTime","makeYearsList","directive","CalendarFactory","restrict","replace","scope","source","selected","link","_init","sourceData","monthNamesList","getMonthName","num","elem","console","log","storage","fileReader","element","on","changeEvent","files","target","r","FileReader","onload","e","contents","$apply","readAsText"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n\nangular.module('outstanding', [\n    //modules\n    'outstanding.templates',\n\n    //pages\n    'outstanding.pages.landing',\n\n    //factories\n    'outstanding.data',\n\n    //external libs\n    'ngAnimate',\n    'ui.router',\n    'anim-in-out',\n    'angular-loading-bar'//,\n    //'ui.bootstrap',\n\n])\n\n    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n        $urlRouterProvider.otherwise('/landing');\n    }])\n;\n\n'use strict';\n\nangular.module('outstanding.data', [])\n\n    .factory('DataFactory', ['$rootScope', function ($rootScope) {\n\n        var COLS = {\n            CONTRACT: 0,\n            DATE: 1,\n            TIME: 2,\n            AMOUNT: 3\n        };\n\n        var exports = {\n            data: [],\n            parsedData: [],\n            selectedDate: null,\n            parseData: function (data) {\n                //TODO (S.Panfilov) just a mock\n                return [\n                    ['Contract', 'Date', 'Time', 'Amount'],\n                    [14851, '20/05/2016', '12:04:78.594', 1405.61],\n                    [35156, '20/05/2016', '12:37:35.298', 23415.51],\n                    [29526, '22/05/2016', '15:24:31.562', 5296.15],\n                    [29586, '23/05/2016', '11:27:25.158', 18150.57],\n                    [56556, '04/06/2016', '09:51:21.565', 9385.19]\n                ]\n            },\n            getCol: function (parsedData, colNum, isExcludeTitle) {\n                var result = [];\n                var start = (isExcludeTitle) ? 1 : 0;\n\n                for (var i = start; i < parsedData.length; i++) {\n                    var row = parsedData[i];\n                    result.push(row[colNum]);\n                }\n                return result;\n            },\n            getContractCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.CONTRACT, isExcludeTitle);\n            },\n            getDateCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.DATE, isExcludeTitle);\n            },\n            getTimeCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.TIME, isExcludeTitle);\n            },\n            getAmountCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.AMOUNT, isExcludeTitle);\n            }\n        };\n\n        $rootScope.$watch(function () {\n            return exports.data;\n        }, function (value, oldValue) {\n            if (!value || value === oldValue) return;\n\n            exports.parsedData = exports.parseData(value);\n        }, true);\n\n        return exports;\n    }])\n\n;\n\n'use strict';\n\nangular.module('outstanding.pages.landing', [\n    'outstanding.calendar',\n    'outstanding.date_details',\n    'outstanding.uploader',\n    'ui.router'\n])\n\n    .config(['$stateProvider', function ($stateProvider) {\n\n        $stateProvider\n            .state('landing', {\n                url: '/landing',\n                templateUrl: 'landing/landing.html',\n                controller: 'LandingPageCtrl'\n            })\n        ;\n    }])\n\n    .controller('LandingPageCtrl', ['$scope', 'DataFactory', function ($scope, DataFactory) {\n\n        (function _init() {\n            $scope.DataFactory = DataFactory;\n            $scope.isUtc = false;\n        })();\n\n    }])\n;\n\n'use strict';\n\nangular.module('outstanding.calendar', [])\n\n    .factory('CalendarFactory', ['DataFactory', function (DataFactory) {\n\n        function _getDaysInMonth(month, year) {\n            var date = new Date(year, month + 1, 0);\n            if (!exports.isUTC) {\n                return date.getDate();\n            } else {\n                return date.getUTCDate();\n            }\n        }\n\n        function _getDays(monthNum, yearNum) {\n            var result = {};\n            var from = 1;\n            var to = _getDaysInMonth(monthNum, yearNum);\n\n            for (var i = from; i <= to; i++) {\n                result[i] = {};\n            }\n\n            return result;\n        }\n\n        function _getMonthNumber(datetime) {\n            var date = new Date(datetime);\n            if (!exports.isUTC) {\n                return date.getMonth();\n            } else {\n                return date.getUTCMonth();\n            }\n        }\n\n        function getMonth(datetime) {\n            var month = {\n                number: _getMonthNumber(datetime),\n                days: _getDays(datetime)\n            };\n\n            return month;\n        }\n\n        function _getYearNumber(datetime) {\n            var date = new Date(datetime);\n            if (!exports.isUTC) {\n                return date.getFullYear();\n            } else {\n                return date.getUTCFullYear();\n            }\n\n        }\n\n        function _getMonthList(dateTimesList, yearNum) {\n            var result = {};\n            for (var i = 0; i < dateTimesList.length; i++) {\n                var datetime = dateTimesList[i];\n                if (yearNum === _getYearNumber(datetime)) {\n                    var monthNum = _getMonthNumber(datetime);\n                    if (!result[monthNum]) {\n                        result[monthNum] = _getDays(monthNum, yearNum);\n                    }\n                }\n            }\n\n            return result;\n        }\n\n\n        var exports = {\n            dates: [],\n            years: [],\n            isUTC: false,\n            setUTC: function (isUTC) {\n                exports.isUTC = isUTC || false;\n            },\n            setDates: function (data) {\n                exports.dates = [];\n                var datesCol = DataFactory.getDateCol(data, true);\n                var datesRegexp = new RegExp(/\\d+/g);\n\n                for (var i = 0; i < datesCol.length; i++) {\n                    var dateString = datesCol[i];\n                    var parsed = dateString.match(datesRegexp);\n                    var date = new Date(parsed[2], parsed[1] - 1, parsed[0]);\n                    exports.dates.push(date.getTime());\n                }\n            },\n            makeYearsList: function () {\n                var years = {};\n\n                for (var i = 0; i < exports.dates.length; i++) {\n                    var datetime = exports.dates[i];\n                    var yearNum = _getYearNumber(datetime);\n                    if (!years[yearNum]) { //TODO (S.Panfilov) what if year exist?\n                        years[yearNum] = _getMonthList(exports.dates, yearNum);\n                    }\n                }\n\n                exports.years = years;\n\n            }\n        };\n\n        return exports;\n    }])\n\n    .directive('calendar', ['CalendarFactory', function (CalendarFactory) {\n        return {\n            restrict: 'E',\n            replace: true,\n            templateUrl: 'calendar/calendar.html',\n            scope: {\n                source: '=',\n                selected: '=',\n                isUtc: '='\n            },\n            link: function (scope) {\n\n                var monthNamesList = [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                    'August',\n                    'September',\n                    'October',\n                    'November',\n                    'December'\n                ];\n\n                scope.getMonthName = function (num) {\n                    return monthNamesList[num - 1];\n                };\n\n                scope.$watch('source', function (value, oldValue) {\n                        if (!value || value === oldValue) return;\n                        _init(value);\n                    }\n                );\n\n                function _init(sourceData) {\n                    CalendarFactory.setUTC(scope.isUtc);\n                    CalendarFactory.setDates(sourceData);\n                    CalendarFactory.makeYearsList();\n                }\n\n                scope.CalendarFactory = CalendarFactory;\n\n            }\n        };\n    }])\n\n;\n\n'use strict';\n\nangular.module('outstanding.date_details', [])\n\n    .directive('date_details', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            link: function (scope, elem) {\n                console.log('details');\n            }\n        };\n    })\n\n;\n\n'use strict';\n\nangular.module('outstanding.uploader', [])\n\n    .directive('uploader', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                storage: '='\n            },\n            templateUrl: 'uploader/uploader.html',\n            link: function (scope) {\n                scope.$watch('fileContent', function (value, oldValue) {\n                        if (value === oldValue) return;\n                        scope.storage = value;\n                    }, true\n                );\n            }\n        };\n    })\n\n    .directive('fileReader', function () {\n        return {\n            scope: {\n                fileReader: \"=\"\n            },\n            link: function (scope, element) {\n                element.on('change', function (changeEvent) {\n                    var files = changeEvent.target.files;\n                    if (files.length) {\n                        var r = new FileReader();\n\n                        r.onload = function (e) {\n                            var contents = e.target.result;\n                            scope.$apply(function () {\n                                scope.fileReader = contents;\n                            });\n                        };\n\n                        r.readAsText(files[0]);\n                    }\n                });\n            }\n        };\n    })\n\n\n;\n"],"sourceRoot":"/source/"}