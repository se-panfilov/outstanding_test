{"version":3,"sources":["app.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","factory","$rootScope","COLS","CONTRACT","DATE","TIME","AMOUNT","exports","data","parsedData","selectedDate","parseData","getCol","colNum","isExcludeTitle","result","start","i","length","row","push","getRow","rowNum","getContractCol","getDateCol","getTimeCol","getAmountCol","getRowByDateString","dateStr","getContractVal","getDateVal","getTimeVal","getAmountVal","$watch","value","oldValue","constant","DataFactory","DAY_EVENT_FIELDS","MONTH_NAMES","_getDaysInMonth","month","year","date","Date","isUTC","getUTCDate","getDate","_getDays","monthNum","yearNum","from","to","_getMonthNumber","datetime","isUserView","getUTCMonth","getMonth","_getDayNumber","_getYearNumber","getUTCFullYear","getFullYear","_getMonthList","dateTimesList","DATE_REGEXP","RegExp","dates","years","setUTC","setDates","datesCol","dateString","parsed","match","getTime","makeYearsList","insertDataToDates","slice","dayNum","event","events","getTotalForDay","eventsList","fieldName","getMonthName","num","directive","CalendarFactory","restrict","replace","templateUrl","scope","source","selected","isUtc","link","initFactory","sourceData","setSelectedDate","day","storage","fileReader","element","on","changeEvent","files","target","r","FileReader","onload","e","contents","$apply","readAsText","state","url","controller","$scope"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n\nangular.module('outstanding', [\n    //modules\n    'outstanding.templates',\n\n    //pages\n    'outstanding.pages.landing',\n\n    //factories\n    'outstanding.data',\n\n    //external libs\n    'ngAnimate',\n    'ui.router',\n    'anim-in-out',\n    'angular-loading-bar'//,\n    //'ui.bootstrap',\n\n])\n\n    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n        $urlRouterProvider.otherwise('/landing');\n    }])\n;\n\n'use strict';\n\nangular.module('outstanding.data', [])\n\n    .factory('DataFactory', ['$rootScope', function ($rootScope) {\n\n        var COLS = {\n            CONTRACT: 0,\n            DATE: 1,\n            TIME: 2,\n            AMOUNT: 3\n        };\n\n        var exports = {\n            data: [],\n            parsedData: [],\n            selectedDate: null,\n            parseData: function (data) {\n                //TODO (S.Panfilov) just a mock\n                return [\n                    ['Contract', 'Date', 'Time', 'Amount'],\n                    [14851, '20/05/2016', '12:04:78.594', 1405.61],\n                    [35156, '20/05/2016', '12:37:35.298', 23415.51],\n                    [29526, '22/05/2016', '15:24:31.562', 5296.15],\n                    [29586, '23/05/2016', '11:27:25.158', 18150.57],\n                    [56556, '04/06/2016', '09:51:21.565', 9385.19]\n                ]\n            },\n            getCol: function (parsedData, colNum, isExcludeTitle) {\n                var result = [];\n                var start = (isExcludeTitle) ? 1 : 0;\n\n                for (var i = start; i < parsedData.length; i++) {\n                    var row = parsedData[i];\n                    result.push(row[colNum]);\n                }\n                return result;\n            },\n            getRow: function (parsedData, rowNum) {\n                return parsedData[rowNum];//TODO (S.Panfilov) unused\n            },\n            getContractCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.CONTRACT, isExcludeTitle);\n            },\n            getDateCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.DATE, isExcludeTitle);\n            },\n            getTimeCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.TIME, isExcludeTitle);\n            },\n            getAmountCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.AMOUNT, isExcludeTitle);\n            },\n            getRowByDateString: function (dateStr) {\n                var start = 1; //exclude titles\n                for (var i = start; i < exports.parsedData.length; i++) {\n                    var row = exports.parsedData[i];\n                    if (row[COLS.DATE] === dateStr){\n                        return row;\n                    }\n                }\n\n                //TODO (S.Panfilov) throw error here\n            },\n            getContractVal: function (row) {\n                return row[COLS.CONTRACT];\n            },\n            getDateVal: function (row) {\n                return row[COLS.DATE];\n            },\n            getTimeVal: function (row) {\n                return row[COLS.TIME];\n            },\n            getAmountVal: function (row) {\n                return row[COLS.AMOUNT];\n            }\n        };\n\n        $rootScope.$watch(function () {\n            return exports.data;\n        }, function (value, oldValue) {\n            if (!value || value === oldValue) return;\n\n            exports.parsedData = exports.parseData(value);\n        }, true);\n\n        return exports;\n    }])\n\n;\n\n'use strict';\n\nangular.module('outstanding.calendar', [])\n\n    .constant('DAY_EVENT_FIELDS', {\n        CONTRACT: 'contract',\n        AMOUNT: 'amount',\n        DATE: 'date',\n        TIME: 'time'\n    })\n\n    .constant('MONTH_NAMES', [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ])\n\n    .factory('CalendarFactory', ['DataFactory', 'DAY_EVENT_FIELDS', 'MONTH_NAMES', function (DataFactory, DAY_EVENT_FIELDS, MONTH_NAMES) {\n\n        function _getDaysInMonth(month, year) {\n            var date = new Date(year, month + 1, 0);\n            if (!exports.isUTC) {\n                return date.getDate();\n            } else {\n                return date.getUTCDate();\n            }\n        }\n\n        function _getDays(monthNum, yearNum) {\n            var result = {};\n            var from = 1;\n            var to = _getDaysInMonth(monthNum, yearNum);\n\n            for (var i = from; i <= to; i++) {\n                result[i] = {};\n            }\n\n            return result;\n        }\n\n        function _getMonthNumber(datetime, isUserView) {\n            var date = new Date(datetime);\n            var result;\n            if (!exports.isUTC) {\n                result = date.getMonth();\n            } else {\n                result = date.getUTCMonth();\n            }\n\n            result += (isUserView) ? 1 : 0;\n            return result;\n        }\n\n        function _getDayNumber(datetime) {\n            var date = new Date(datetime);\n            if (!exports.isUTC) {\n                return date.getDate();\n            } else {\n                return date.getUTCDate();\n            }\n        }\n\n        function _getYearNumber(datetime) {\n            var date = new Date(datetime);\n            if (!exports.isUTC) {\n                return date.getFullYear();\n            } else {\n                return date.getUTCFullYear();\n            }\n\n        }\n\n        function _getMonthList(dateTimesList, yearNum) {\n            var result = {};\n            for (var i = 0; i < dateTimesList.length; i++) {\n                var datetime = dateTimesList[i];\n                if (yearNum === _getYearNumber(datetime)) {\n                    var monthNum = _getMonthNumber(datetime, true);\n                    if (!result[monthNum]) {\n                        result[monthNum] = _getDays(monthNum, yearNum);\n                    }\n                }\n            }\n\n            return result;\n        }\n\n        var DATE_REGEXP = new RegExp(/\\d+/g);\n\n        var exports = {\n            dates: [],\n            years: [],\n            isUTC: false,\n            setUTC: function (isUTC) {\n                exports.isUTC = isUTC || false;\n            },\n            setDates: function (data) {\n                exports.dates = [];\n                var datesCol = DataFactory.getDateCol(data, true);\n\n                for (var i = 0; i < datesCol.length; i++) {\n                    var dateString = datesCol[i];\n                    var parsed = dateString.match(DATE_REGEXP);\n                    var date = new Date(parsed[2], parsed[1] - 1, parsed[0]);\n                    exports.dates.push(date.getTime());\n                }\n            },\n            makeYearsList: function () {\n                var years = {};\n\n                for (var i = 0; i < exports.dates.length; i++) {\n                    var datetime = exports.dates[i];\n                    var yearNum = _getYearNumber(datetime);\n                    if (!years[yearNum]) { //TODO (S.Panfilov) what if year exist?\n                        years[yearNum] = _getMonthList(exports.dates, yearNum);\n                    }\n                }\n\n                exports.years = years;\n\n            },\n            insertDataToDates: function () {\n                for (var i = 0; i < exports.dates.length; i++) {\n                    var datetime = exports.dates[i];\n                    var yearNum = _getYearNumber(datetime);//TODO (S.Panfilov) bug with -1/+1 month number\n                    var monthNum = ('0' + _getMonthNumber(datetime, true)).slice(-2);\n                    var dayNum = ('0' + _getDayNumber(datetime)).slice(-2);\n                    var dateStr = dayNum + '/' + monthNum + '/' + yearNum;//A hack cause normally should be based on regexp\n\n                    //TODO (S.Panfilov) BUG: we cannot act like so (take strings by date), because of same date events\n                    var row = DataFactory.getRowByDateString(dateStr);\n                    var event = {};\n\n                    exports.years[+yearNum][+monthNum][+dayNum].events = exports.years[+yearNum][+monthNum][+dayNum].events || [];\n                    event[DAY_EVENT_FIELDS.CONTRACT] = DataFactory.getContractVal(row);\n                    event[DAY_EVENT_FIELDS.TIME] = DataFactory.getTimeVal(row);\n                    event[DAY_EVENT_FIELDS.AMOUNT] = DataFactory.getAmountVal(row);\n                    exports.years[+yearNum][+monthNum][+dayNum].events.push(event);\n                }\n            },\n            getTotalForDay: function (eventsList, fieldName) {\n                if (!eventsList) return;\n\n                var result = 0;\n                for (var i = 0; i < eventsList.length; i++) {\n                    var event = eventsList[i];\n                    result += event[fieldName];\n                }\n\n                return result;\n            },\n            getMonthName: function (num) {\n                return MONTH_NAMES[num - 1];\n            }\n        };\n\n        return exports;\n    }])\n\n    .directive('calendar', ['CalendarFactory', 'DAY_EVENT_FIELDS', function (CalendarFactory, DAY_EVENT_FIELDS) {\n        return {\n            restrict: 'E',\n            replace: true,\n            templateUrl: 'calendar/calendar.html',\n            scope: {\n                source: '=',\n                selected: '=',\n                isUtc: '='\n            },\n            link: function (scope) {\n\n                scope.setSelectedDate = function (day, month, year) {\n                    scope.selected = {\n                        day: day,\n                        month: month,\n                        year: year,\n                        data: CalendarFactory.years[year][month][day]\n                    };\n                };\n\n                scope.$watch('source', function (value, oldValue) {\n                        if (!value || value === oldValue) return;\n                        initFactory(value);\n                    }\n                );\n\n                function initFactory(sourceData) {\n                    CalendarFactory.setUTC(scope.isUtc);\n                    CalendarFactory.setDates(sourceData);\n                    CalendarFactory.makeYearsList();\n                    CalendarFactory.insertDataToDates();\n                }\n\n                (function _init() {\n                    scope.CalendarFactory = CalendarFactory;\n                    scope.DAY_EVENT_FIELDS = DAY_EVENT_FIELDS;\n                })();\n\n            }\n        };\n    }])\n\n;\n\n'use strict';\n\nangular.module('outstanding.date_details', [\n    'outstanding.calendar'\n])\n\n    .directive('dateDetails', ['CalendarFactory', 'DAY_EVENT_FIELDS', function (CalendarFactory, DAY_EVENT_FIELDS) {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                source: '='\n            },\n            templateUrl: 'date_details/date_details.html',\n            link: function (scope) {\n\n                scope.CalendarFactory = CalendarFactory;\n                scope.DAY_EVENT_FIELDS = DAY_EVENT_FIELDS;\n            }\n        };\n    }])\n\n;\n\n'use strict';\n\nangular.module('outstanding.uploader', [])\n\n    .directive('uploader', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                storage: '='\n            },\n            templateUrl: 'uploader/uploader.html',\n            link: function (scope) {\n                scope.$watch('fileContent', function (value, oldValue) {\n                        if (value === oldValue) return;\n                        scope.storage = value;\n                    }, true\n                );\n            }\n        };\n    })\n\n    .directive('fileReader', function () {\n        return {\n            scope: {\n                fileReader: \"=\"\n            },\n            link: function (scope, element) {\n                element.on('change', function (changeEvent) {\n                    var files = changeEvent.target.files;\n                    if (files.length) {\n                        var r = new FileReader();\n\n                        r.onload = function (e) {\n                            var contents = e.target.result;\n                            scope.$apply(function () {\n                                scope.fileReader = contents;\n                            });\n                        };\n\n                        r.readAsText(files[0]);\n                    }\n                });\n            }\n        };\n    })\n\n\n;\n\n'use strict';\n\nangular.module('outstanding.pages.landing', [\n    'outstanding.calendar',\n    'outstanding.date_details',\n    'outstanding.uploader',\n    'ui.router'\n])\n\n    .config(['$stateProvider', function ($stateProvider) {\n\n        $stateProvider\n            .state('landing', {\n                url: '/landing',\n                templateUrl: 'landing/landing.html',\n                controller: 'LandingPageCtrl'\n            })\n        ;\n    }])\n\n    .controller('LandingPageCtrl', ['$scope', 'DataFactory', function ($scope, DataFactory) {\n\n        (function _init() {\n            $scope.DataFactory = DataFactory;\n            $scope.isUtc = false;\n        })();\n\n    }])\n;\n"],"sourceRoot":"/source/"}