{"version":3,"sources":["app.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","$scope","console","log","directive","restrict","replace","link","scope","elem","FilesFactory","element","attrs","fileAccept","fileUploadBtnDesc","fileUploader","fileUploadFiledName","callbackHandler","$eval","fileUploaderCallback","handler","event","files","target","length","initFilesUpload","bind","factory","urlMap","MessagesFactory","$timeout","HTTP_STATUS","prepareFiles","fieldName","formData","FormData","i","file","append","isError","status","firstErrorCode","showMessageToUser","delay","UNPROCESSABLE_ENTITY","errorMsg","_messages","invalidFileError","statusErrorMsg","successMsg","successFileUploadComplete","uploadProgressHandler","evt","lengthComputable","exports","uploadProgress","Math","round","loaded","total","uploadCompleteHandler","uploadFailedHandler","errorFileUpload","uploadCanceledHandler","infoMsg","infoUploadCanceled","uploadEvents","progress","load","error","abort","setFiles","push","clearFiles","makeFilesUpload","callback","method","xhr","XMLHttpRequest","upload","addEventListener","open","onload","cleanUpAfterUpload","this","send"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n\nangular.module('outstanding', [\n    //modules\n    'outstanding.templates',\n\n    //pages\n    'outstanding.pages.landing',\n\n    //factories\n\n    //external libs\n    'ngAnimate',\n    'ui.router',\n    'anim-in-out',\n    'angular-loading-bar'//,\n    //'ui.bootstrap',\n\n])\n\n    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n        $urlRouterProvider.otherwise('/landing');\n    }])\n;\n\n'use strict';\n\nangular.module('outstanding.pages.landing', [\n    'outstanding.calendar',\n    'outstanding.date_details',\n    'outstanding.uploader',\n    'ui.router'\n])\n\n    .config(['$stateProvider', function ($stateProvider) {\n\n        $stateProvider\n            .state('landing', {\n                url: '/landing',\n                templateUrl: 'landing/landing.html',\n                controller: 'LandingPageCtrl'\n            })\n        ;\n    }])\n\n    .controller('LandingPageCtrl', ['$scope', function ($scope) {\n\n        console.log('landing');\n        \n    }])\n;\n\n'use strict';\n\nangular.module('outstanding.calendar', [])\n\n    .directive('calendar', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            link: function (scope, elem) {\n                console.log('calendar');\n            }\n        };\n    })\n\n;\n\n'use strict';\n\nangular.module('outstanding.date_details', [])\n\n    .directive('date_details', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            link: function (scope, elem) {\n                console.log('details');\n            }\n        };\n    })\n\n;\n\n'use strict';\n\nangular.module('app.files.uploader', ['app.files.factory'])\n\n    .directive('fileUploader', ['FilesFactory', function (FilesFactory) {\n        return {\n            restrict: 'A',\n            templateUrl: 'files/files-uploader.html',\n            link: function (scope, element, attrs) {\n                //TODO (S.Panfilov) should refactor with isolated scope and throw errors\n                scope.fileAccept = (attrs.fileAccept) ? attrs.fileAccept : '*/*';\n                scope.fileUploadBtnDesc = (attrs.fileUploadBtnDesc) ? attrs.fileUploadBtnDesc : '';\n                scope.fileUploader = attrs.fileUploader;\n                scope.fileUploadFiledName = attrs.fileUploadFiledName;\n\n                var callbackHandler = scope.$eval(attrs.fileUploaderCallback);\n\n                var handler = function (event) {\n                    var files = event.target.files;\n                    if (files.length === 0) return;\n\n                    FilesFactory.initFilesUpload(scope.fileUploader, files, scope.fileUploadFiledName, callbackHandler);\n                };\n\n                element.bind('change', handler);\n            }\n        };\n    }])\n;\n'use strict';\n\nangular.module('outstanding.files.factory', [])\n\n    .factory('FilesFactory', ['urlMap', 'MessagesFactory', '$timeout', 'HTTP_STATUS', function (urlMap, MessagesFactory, $timeout, HTTP_STATUS) {\n\n        var _messages = {\n            successFileUploadComplete: 'File successful uploaded',\n            errorFileUpload: 'Uploading error',\n            infoUploadCanceled: 'Uploaded cancelled',\n            invalidFileError: 'Unprocessed file'\n        };\n\n        var uploadEvents = {\n            progress: 'progress',\n            load: 'load',\n            error: 'error',\n            abort: 'abort'\n        };\n\n        function prepareFiles(files, fieldName) {\n            var formData = new FormData();\n\n            for (var i = 0; i < files.length; i++) {\n                var file = files[i];\n                formData.append(fieldName, file);\n            }\n\n            return formData;\n        }\n\n        var exports = {\n            uploadProgress: 0,\n            files: [],\n            fieldName: 'file',\n            setFiles: function (files) {\n                exports.files = [];\n                for (var i = 0; i < files.length; i++) {\n                    exports.files.push(files[i]);\n                }\n            },\n            clearFiles: function () {\n                exports.files = [];\n            },\n            makeFilesUpload: function (url, callback) {\n                var formData = prepareFiles(exports.files, exports.fieldName);\n\n                var method = 'POST';\n                var xhr = new XMLHttpRequest();\n                xhr.upload.addEventListener(uploadEvents.progress, uploadProgressHandler, false);\n                xhr.addEventListener(uploadEvents.load, uploadCompleteHandler, false);\n                xhr.addEventListener(uploadEvents.error, uploadFailedHandler, false);\n                xhr.addEventListener(uploadEvents.abort, uploadCanceledHandler, false);\n                xhr.open(method, url);\n                xhr.onload = function (event) {\n                    showMessageToUser(event);\n                    exports.cleanUpAfterUpload();\n                    if (callback) callback(event, isError(this.status));\n                };\n                xhr.send(formData);\n            },\n            initFilesUpload: function (url, files, fieldName, callback) {\n                if (fieldName) {\n                    exports.fieldName = fieldName;\n                }\n                exports.setFiles(files);\n                exports.makeFilesUpload(url, callback);\n            },\n            cleanUpAfterUpload: function () {\n                exports.uploadProgress = 0;\n                exports.clearFiles();\n            }\n        };\n\n        function isError(status) {\n            var firstErrorCode = 400;\n            return (status >= firstErrorCode);\n\n        }\n\n        function showMessageToUser(event) {\n            var delay = 1000;\n            var status = event.target.status;\n\n            $timeout(function () {\n                if (status === HTTP_STATUS.UNPROCESSABLE_ENTITY) {\n                    MessagesFactory.errorMsg(_messages.invalidFileError);\n                } else if (isError(status)) {\n                    MessagesFactory.statusErrorMsg(status);\n                } else {\n                    MessagesFactory.successMsg(_messages.successFileUploadComplete);\n                }\n            }, delay);\n\n        }\n\n        function uploadProgressHandler(evt) {\n            if (evt.lengthComputable) {\n                exports.uploadProgress = Math.round(evt.loaded * 100 / evt.total);\n            } else {\n                exports.uploadProgress = '???';\n            }\n        }\n\n        function uploadCompleteHandler(evt) {\n            //var delay = 1000;\n            //$timeout(function () {\n            //    MessagesFactory.successMsg(_messages.successFileUploadComplete);\n            //}, delay);\n        }\n\n        function uploadFailedHandler(evt) {\n            var delay = 1000;\n            $timeout(function () {\n                MessagesFactory.errorMsg(_messages.errorFileUpload);\n            }, delay);\n        }\n\n        function uploadCanceledHandler(evt) {\n            var delay = 1000;\n            $timeout(function () {\n                MessagesFactory.infoMsg(_messages.infoUploadCanceled);\n            }, delay);\n        }\n\n        return exports;\n\n    }])\n;\n\n\n'use strict';\n\nangular.module('outstanding.uploader', [])\n\n    .directive('uploader', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            link: function (scope, elem) {\n                console.log('uploader');\n            }\n        };\n    })\n\n;\n"],"sourceRoot":"/source/"}