{"version":3,"sources":["app.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","factory","$rootScope","COLS","CONTRACT","DATE","TIME","AMOUNT","exports","data","parsedData","selectedDate","parseData","getCol","colNum","isExcludeTitle","result","start","i","length","row","push","getRow","rowNum","getContractCol","getDateCol","getTimeCol","getAmountCol","getRowByDateString","dateStr","getContractVal","getDateVal","getTimeVal","getAmountVal","$watch","value","oldValue","constant","DataFactory","DAY_EVENT_FIELDS","_getDaysInMonth","month","year","date","Date","isUTC","getUTCDate","getDate","_getDays","monthNum","yearNum","from","to","_getMonthNumber","datetime","getUTCMonth","getMonth","_getDayNumber","_getYearNumber","getUTCFullYear","getFullYear","_getMonthList","dateTimesList","DATE_REGEXP","RegExp","dates","years","setUTC","setDates","datesCol","dateString","parsed","match","getTime","makeYearsList","insertDataToDates","slice","dayNum","event","events","directive","CalendarFactory","restrict","replace","templateUrl","scope","source","selected","isUtc","link","initFactory","sourceData","monthNamesList","getMonthName","num","getTotalForDay","eventsList","fieldName","elem","console","log","storage","fileReader","element","on","changeEvent","files","target","r","FileReader","onload","e","contents","$apply","readAsText","state","url","controller","$scope"],"mappings":"AAAA,YAEAA,SAAQC,OAAO,eAEX,wBAGA,4BAGA,mBAGA,YACA,YACA,cACA,wBAKCC,QAAQ,iBAAkB,qBAAsB,SAAUC,EAAgBC,GACvEA,EAAmBC,UAAU,eAMrCL,QAAQC,OAAO,uBAEVK,QAAQ,eAAgB,aAAc,SAAUC,GAE7C,GAAIC,IACAC,SAAU,EACVC,KAAM,EACNC,KAAM,EACNC,OAAQ,GAGRC,GACAC,QACAC,cACAC,aAAc,KACdC,UAAW,SAAUH,GAEjB,QACK,WAAY,OAAQ,OAAQ,WAC5B,MAAO,aAAc,eAAgB,UACrC,MAAO,aAAc,eAAgB,WACrC,MAAO,aAAc,eAAgB,UACrC,MAAO,aAAc,eAAgB,WACrC,MAAO,aAAc,eAAgB,WAG9CI,OAAQ,SAAUH,EAAYI,EAAQC,GAIlC,IAAK,GAHDC,MACAC,EAAQ,EAAmB,EAAI,EAE1BC,EAAID,EAAOC,EAAIR,EAAWS,OAAQD,IAAK,CAC5C,GAAIE,GAAMV,EAAWQ,EACrBF,GAAOK,KAAKD,EAAIN,IAEpB,MAAOE,IAEXM,OAAQ,SAAUZ,EAAYa,GAC1B,MAAOb,GAAWa,IAEtBC,eAAgB,SAAUd,EAAYK,GAClC,MAAOP,GAAQK,OAAOH,EAAYP,EAAKC,SAAUW,IAErDU,WAAY,SAAUf,EAAYK,GAC9B,MAAOP,GAAQK,OAAOH,EAAYP,EAAKE,KAAMU,IAEjDW,WAAY,SAAUhB,EAAYK,GAC9B,MAAOP,GAAQK,OAAOH,EAAYP,EAAKG,KAAMS,IAEjDY,aAAc,SAAUjB,EAAYK,GAChC,MAAOP,GAAQK,OAAOH,EAAYP,EAAKI,OAAQQ,IAEnDa,mBAAoB,SAAUC,GAE1B,IAAK,GADDZ,GAAQ,EACHC,EAAID,EAAOC,EAAIV,EAAQE,WAAWS,OAAQD,IAAK,CACpD,GAAIE,GAAMZ,EAAQE,WAAWQ,EAC7B,IAAIE,EAAIjB,EAAKE,QAAUwB,EACnB,MAAOT,KAMnBU,eAAgB,SAAUV,GACtB,MAAOA,GAAIjB,EAAKC,WAEpB2B,WAAY,SAAUX,GAClB,MAAOA,GAAIjB,EAAKE,OAEpB2B,WAAY,SAAUZ,GAClB,MAAOA,GAAIjB,EAAKG,OAEpB2B,aAAc,SAAUb,GACpB,MAAOA,GAAIjB,EAAKI,SAYxB,OARAL,GAAWgC,OAAO,WACd,MAAO1B,GAAQC,MAChB,SAAU0B,EAAOC,GACXD,GAASA,IAAUC,IAExB5B,EAAQE,WAAaF,EAAQI,UAAUuB,MACxC,GAEI3B,KAOfb,QAAQC,OAAO,2BAEVyC,SAAS,oBACNjC,SAAU,WACVG,OAAQ,SACRF,KAAM,OACNC,KAAM,SAGTL,QAAQ,mBAAoB,cAAe,mBAAoB,SAAUqC,EAAaC,GAEnF,QAASC,GAAgBC,EAAOC,GAC5B,GAAIC,GAAO,GAAIC,MAAKF,EAAMD,EAAQ,EAAG,EACrC,OAAKjC,GAAQqC,MAGFF,EAAKG,aAFLH,EAAKI,UAMpB,QAASC,GAASC,EAAUC,GAKxB,IAAK,GAJDlC,MACAmC,EAAO,EACPC,EAAKZ,EAAgBS,EAAUC,GAE1BhC,EAAIiC,EAAWC,GAALlC,EAASA,IACxBF,EAAOE,KAGX,OAAOF,GAGX,QAASqC,GAAgBC,GACrB,GAAIX,GAAO,GAAIC,MAAKU,EACpB,OAAK9C,GAAQqC,MAGFF,EAAKY,cAFLZ,EAAKa,WAMpB,QAASC,GAAcH,GACnB,GAAIX,GAAO,GAAIC,MAAKU,EACpB,OAAK9C,GAAQqC,MAGFF,EAAKG,aAFLH,EAAKI,UAepB,QAASW,GAAeJ,GACpB,GAAIX,GAAO,GAAIC,MAAKU,EACpB,OAAK9C,GAAQqC,MAGFF,EAAKgB,iBAFLhB,EAAKiB,cAOpB,QAASC,GAAcC,EAAeZ,GAElC,IAAK,GADDlC,MACKE,EAAI,EAAGA,EAAI4C,EAAc3C,OAAQD,IAAK,CAC3C,GAAIoC,GAAWQ,EAAc5C,EAC7B,IAAIgC,IAAYQ,EAAeJ,GAAW,CACtC,GAAIL,GAAWI,EAAgBC,EAC1BtC,GAAOiC,KACRjC,EAAOiC,GAAYD,EAASC,EAAUC,KAKlD,MAAOlC,GAGX,GAAI+C,GAAc,GAAIC,QAAO,QAEzBxD,GACAyD,SACAC,SACArB,OAAO,EACPsB,OAAQ,SAAUtB,GACdrC,EAAQqC,MAAQA,IAAS,GAE7BuB,SAAU,SAAU3D,GAChBD,EAAQyD,QAGR,KAAK,GAFDI,GAAW/B,EAAYb,WAAWhB,GAAM,GAEnCS,EAAI,EAAGA,EAAImD,EAASlD,OAAQD,IAAK,CACtC,GAAIoD,GAAaD,EAASnD,GACtBqD,EAASD,EAAWE,MAAMT,GAC1BpB,EAAO,GAAIC,MAAK2B,EAAO,GAAIA,EAAO,GAAK,EAAGA,EAAO,GACrD/D,GAAQyD,MAAM5C,KAAKsB,EAAK8B,aAGhCC,cAAe,WAGX,IAAK,GAFDR,MAEKhD,EAAI,EAAGA,EAAIV,EAAQyD,MAAM9C,OAAQD,IAAK,CAC3C,GAAIoC,GAAW9C,EAAQyD,MAAM/C,GACzBgC,EAAUQ,EAAeJ,EACxBY,GAAMhB,KACPgB,EAAMhB,GAAWW,EAAcrD,EAAQyD,MAAOf,IAItD1C,EAAQ0D,MAAQA,GAGpBS,kBAAmB,WACf,IAAK,GAAIzD,GAAI,EAAGA,EAAIV,EAAQyD,MAAM9C,OAAQD,IAAK,CAC3C,GAAIoC,GAAW9C,EAAQyD,MAAM/C,GACzBgC,EAAUQ,EAAeJ,GACzBL,GAAY,KAAOI,EAAgBC,GAAY,IAAIsB,MAAM,IACzDC,GAAU,IAAMpB,EAAcH,IAAWsB,MAAM,IAC/C/C,EAAUgD,EAAS,IAAM5B,EAAW,IAAMC,EAE1C9B,EAAMkB,EAAYV,mBAAmBC,GACrCiD,IAEJtE,GAAQ0D,OAAOhB,IAAUD,IAAW4B,GAAQE,OAASvE,EAAQ0D,OAAOhB,IAAUD,IAAW4B,GAAQE,WACjGD,EAAMvC,EAAiBnC,UAAYkC,EAAYR,eAAeV,GAC9D0D,EAAMvC,EAAiBjC,MAAQgC,EAAYN,WAAWZ,GACtD0D,EAAMvC,EAAiBhC,QAAU+B,EAAYL,aAAab,GAC1DZ,EAAQ0D,OAAOhB,IAAUD,IAAW4B,GAAQE,OAAO1D,KAAKyD,KAKpE,OAAOtE,MAGVwE,UAAU,YAAa,kBAAmB,mBAAoB,SAAUC,EAAiB1C,GACtF,OACI2C,SAAU,IACVC,SAAS,EACTC,YAAa,yBACbC,OACIC,OAAQ,IACRC,SAAU,IACVC,MAAO,KAEXC,KAAM,SAAUJ,GAuCZ,QAASK,GAAYC,GACjBV,EAAgBd,OAAOkB,EAAMG,OAC7BP,EAAgBb,SAASuB,GACzBV,EAAgBP,gBAChBO,EAAgBN,oBAzCpB,GAAIiB,IACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,WAGJP,GAAMQ,aAAe,SAAUC,GAC3B,MAAOF,GAAeE,EAAM,IAGhCT,EAAMU,eAAiB,SAAUC,EAAYC,GACzC,GAAKD,EAAL,CAGA,IAAK,GADDhF,GAAS,EACJE,EAAI,EAAGA,EAAI8E,EAAW7E,OAAQD,IAAK,CACxC,GAAI4D,GAAQkB,EAAW9E,EACvBF,IAAU8D,EAAMmB,GAGpB,MAAOjF,KAGXqE,EAAMnD,OAAO,SAAU,SAAUC,EAAOC,GAC3BD,GAASA,IAAUC,GACxBsD,EAAYvD,KAWpB,WACIkD,EAAMJ,gBAAkBA,EACxBI,EAAM9C,iBAAmBA,UAW7C5C,QAAQC,OAAO,+BAEVoF,UAAU,eAAgB,WACvB,OACIE,SAAU,IACVC,SAAS,EACTM,KAAM,SAAUJ,EAAOa,GACnBC,QAAQC,IAAI,eAS5BzG,QAAQC,OAAO,2BAEVoF,UAAU,WAAY,WACnB,OACIE,SAAU,IACVC,SAAS,EACTE,OACIgB,QAAS,KAEbjB,YAAa,yBACbK,KAAM,SAAUJ,GACZA,EAAMnD,OAAO,cAAe,SAAUC,EAAOC,GACjCD,IAAUC,IACdiD,EAAMgB,QAAUlE,KACjB,OAMlB6C,UAAU,aAAc,WACrB,OACIK,OACIiB,WAAY,KAEhBb,KAAM,SAAUJ,EAAOkB,GACnBA,EAAQC,GAAG,SAAU,SAAUC,GAC3B,GAAIC,GAAQD,EAAYE,OAAOD,KAC/B,IAAIA,EAAMvF,OAAQ,CACd,GAAIyF,GAAI,GAAIC,WAEZD,GAAEE,OAAS,SAAUC,GACjB,GAAIC,GAAWD,EAAEJ,OAAO3F,MACxBqE,GAAM4B,OAAO,WACT5B,EAAMiB,WAAaU,KAI3BJ,EAAEM,WAAWR,EAAM,WAY3C/G,QAAQC,OAAO,6BACX,uBACA,2BACA,uBACA,cAGCC,QAAQ,iBAAkB,SAAUC,GAEjCA,EACKqH,MAAM,WACHC,IAAK,WACLhC,YAAa,uBACbiC,WAAY,uBAKvBA,WAAW,mBAAoB,SAAU,cAAe,SAAUC,EAAQhF,IAEvE,WACIgF,EAAOhF,YAAcA,EACrBgF,EAAO9B,OAAQ","file":"app.min.js","sourcesContent":["'use strict';\n\nangular.module('outstanding', [\n    //modules\n    'outstanding.templates',\n\n    //pages\n    'outstanding.pages.landing',\n\n    //factories\n    'outstanding.data',\n\n    //external libs\n    'ngAnimate',\n    'ui.router',\n    'anim-in-out',\n    'angular-loading-bar'//,\n    //'ui.bootstrap',\n\n])\n\n    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n        $urlRouterProvider.otherwise('/landing');\n    }])\n;\n\n'use strict';\n\nangular.module('outstanding.data', [])\n\n    .factory('DataFactory', ['$rootScope', function ($rootScope) {\n\n        var COLS = {\n            CONTRACT: 0,\n            DATE: 1,\n            TIME: 2,\n            AMOUNT: 3\n        };\n\n        var exports = {\n            data: [],\n            parsedData: [],\n            selectedDate: null,\n            parseData: function (data) {\n                //TODO (S.Panfilov) just a mock\n                return [\n                    ['Contract', 'Date', 'Time', 'Amount'],\n                    [14851, '20/05/2016', '12:04:78.594', 1405.61],\n                    [35156, '20/05/2016', '12:37:35.298', 23415.51],\n                    [29526, '22/05/2016', '15:24:31.562', 5296.15],\n                    [29586, '23/05/2016', '11:27:25.158', 18150.57],\n                    [56556, '04/06/2016', '09:51:21.565', 9385.19]\n                ]\n            },\n            getCol: function (parsedData, colNum, isExcludeTitle) {\n                var result = [];\n                var start = (isExcludeTitle) ? 1 : 0;\n\n                for (var i = start; i < parsedData.length; i++) {\n                    var row = parsedData[i];\n                    result.push(row[colNum]);\n                }\n                return result;\n            },\n            getRow: function (parsedData, rowNum) {\n                return parsedData[rowNum];//TODO (S.Panfilov) unused\n            },\n            getContractCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.CONTRACT, isExcludeTitle);\n            },\n            getDateCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.DATE, isExcludeTitle);\n            },\n            getTimeCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.TIME, isExcludeTitle);\n            },\n            getAmountCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.AMOUNT, isExcludeTitle);\n            },\n            getRowByDateString: function (dateStr) {\n                var start = 1; //exclude titles\n                for (var i = start; i < exports.parsedData.length; i++) {\n                    var row = exports.parsedData[i];\n                    if (row[COLS.DATE] === dateStr){\n                        return row;\n                    }\n                }\n\n                //TODO (S.Panfilov) throw error here\n            },\n            getContractVal: function (row) {\n                return row[COLS.CONTRACT];\n            },\n            getDateVal: function (row) {\n                return row[COLS.DATE];\n            },\n            getTimeVal: function (row) {\n                return row[COLS.TIME];\n            },\n            getAmountVal: function (row) {\n                return row[COLS.AMOUNT];\n            }\n        };\n\n        $rootScope.$watch(function () {\n            return exports.data;\n        }, function (value, oldValue) {\n            if (!value || value === oldValue) return;\n\n            exports.parsedData = exports.parseData(value);\n        }, true);\n\n        return exports;\n    }])\n\n;\n\n'use strict';\n\nangular.module('outstanding.calendar', [])\n\n    .constant('DAY_EVENT_FIELDS', {\n        CONTRACT: 'contract',\n        AMOUNT: 'amount',\n        DATE: 'date',\n        TIME: 'time'\n    })\n\n    .factory('CalendarFactory', ['DataFactory', 'DAY_EVENT_FIELDS', function (DataFactory, DAY_EVENT_FIELDS) {\n\n        function _getDaysInMonth(month, year) {\n            var date = new Date(year, month + 1, 0);\n            if (!exports.isUTC) {\n                return date.getDate();\n            } else {\n                return date.getUTCDate();\n            }\n        }\n\n        function _getDays(monthNum, yearNum) {\n            var result = {};\n            var from = 1;\n            var to = _getDaysInMonth(monthNum, yearNum);\n\n            for (var i = from; i <= to; i++) {\n                result[i] = {};\n            }\n\n            return result;\n        }\n\n        function _getMonthNumber(datetime) {\n            var date = new Date(datetime);\n            if (!exports.isUTC) {\n                return date.getMonth();\n            } else {\n                return date.getUTCMonth();\n            }\n        }\n\n        function _getDayNumber(datetime) {\n            var date = new Date(datetime);\n            if (!exports.isUTC) {\n                return date.getDate();\n            } else {\n                return date.getUTCDate();\n            }\n        }\n\n        function getMonth(datetime) {\n            var month = {\n                number: _getMonthNumber(datetime),\n                days: _getDays(datetime)\n            };\n\n            return month;\n        }\n\n        function _getYearNumber(datetime) {\n            var date = new Date(datetime);\n            if (!exports.isUTC) {\n                return date.getFullYear();\n            } else {\n                return date.getUTCFullYear();\n            }\n\n        }\n\n        function _getMonthList(dateTimesList, yearNum) {\n            var result = {};\n            for (var i = 0; i < dateTimesList.length; i++) {\n                var datetime = dateTimesList[i];\n                if (yearNum === _getYearNumber(datetime)) {\n                    var monthNum = _getMonthNumber(datetime);\n                    if (!result[monthNum]) {\n                        result[monthNum] = _getDays(monthNum, yearNum);\n                    }\n                }\n            }\n\n            return result;\n        }\n\n        var DATE_REGEXP = new RegExp(/\\d+/g);\n\n        var exports = {\n            dates: [],\n            years: [],\n            isUTC: false,\n            setUTC: function (isUTC) {\n                exports.isUTC = isUTC || false;\n            },\n            setDates: function (data) {\n                exports.dates = [];\n                var datesCol = DataFactory.getDateCol(data, true);\n\n                for (var i = 0; i < datesCol.length; i++) {\n                    var dateString = datesCol[i];\n                    var parsed = dateString.match(DATE_REGEXP);\n                    var date = new Date(parsed[2], parsed[1] - 1, parsed[0]);\n                    exports.dates.push(date.getTime());\n                }\n            },\n            makeYearsList: function () {\n                var years = {};\n\n                for (var i = 0; i < exports.dates.length; i++) {\n                    var datetime = exports.dates[i];\n                    var yearNum = _getYearNumber(datetime);\n                    if (!years[yearNum]) { //TODO (S.Panfilov) what if year exist?\n                        years[yearNum] = _getMonthList(exports.dates, yearNum);\n                    }\n                }\n\n                exports.years = years;\n\n            },\n            insertDataToDates: function () {\n                for (var i = 0; i < exports.dates.length; i++) {\n                    var datetime = exports.dates[i];\n                    var yearNum = _getYearNumber(datetime);//TODO (S.Panfilov) bug with -1/+1 month number\n                    var monthNum = ('0' + (_getMonthNumber(datetime) + 1)).slice(-2);\n                    var dayNum = ('0' + _getDayNumber(datetime)).slice(-2);\n                    var dateStr = dayNum + '/' + monthNum + '/' + yearNum;//A hack cause normally should be based on regexp\n\n                    var row = DataFactory.getRowByDateString(dateStr);\n                    var event = {};\n\n                    exports.years[+yearNum][+monthNum][+dayNum].events = exports.years[+yearNum][+monthNum][+dayNum].events || [];\n                    event[DAY_EVENT_FIELDS.CONTRACT] = DataFactory.getContractVal(row);\n                    event[DAY_EVENT_FIELDS.TIME] = DataFactory.getTimeVal(row);\n                    event[DAY_EVENT_FIELDS.AMOUNT] = DataFactory.getAmountVal(row);\n                    exports.years[+yearNum][+monthNum][+dayNum].events.push(event);\n                }\n            }\n        };\n\n        return exports;\n    }])\n\n    .directive('calendar', ['CalendarFactory', 'DAY_EVENT_FIELDS', function (CalendarFactory, DAY_EVENT_FIELDS) {\n        return {\n            restrict: 'E',\n            replace: true,\n            templateUrl: 'calendar/calendar.html',\n            scope: {\n                source: '=',\n                selected: '=',\n                isUtc: '='\n            },\n            link: function (scope) {\n\n                var monthNamesList = [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                    'August',\n                    'September',\n                    'October',\n                    'November',\n                    'December'\n                ];\n\n                scope.getMonthName = function (num) {\n                    return monthNamesList[num - 1];\n                };\n\n                scope.getTotalForDay = function (eventsList, fieldName) {\n                    if (!eventsList) return;\n\n                    var result = 0;\n                    for (var i = 0; i < eventsList.length; i++) {\n                        var event = eventsList[i];\n                        result += event[fieldName];\n                    }\n\n                    return result;\n                };\n\n                scope.$watch('source', function (value, oldValue) {\n                        if (!value || value === oldValue) return;\n                        initFactory(value);\n                    }\n                );\n\n                function initFactory(sourceData) {\n                    CalendarFactory.setUTC(scope.isUtc);\n                    CalendarFactory.setDates(sourceData);\n                    CalendarFactory.makeYearsList();\n                    CalendarFactory.insertDataToDates();\n                }\n\n                (function _init() {\n                    scope.CalendarFactory = CalendarFactory;\n                    scope.DAY_EVENT_FIELDS = DAY_EVENT_FIELDS;\n                })();\n\n            }\n        };\n    }])\n\n;\n\n'use strict';\n\nangular.module('outstanding.date_details', [])\n\n    .directive('date_details', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            link: function (scope, elem) {\n                console.log('details');\n            }\n        };\n    })\n\n;\n\n'use strict';\n\nangular.module('outstanding.uploader', [])\n\n    .directive('uploader', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                storage: '='\n            },\n            templateUrl: 'uploader/uploader.html',\n            link: function (scope) {\n                scope.$watch('fileContent', function (value, oldValue) {\n                        if (value === oldValue) return;\n                        scope.storage = value;\n                    }, true\n                );\n            }\n        };\n    })\n\n    .directive('fileReader', function () {\n        return {\n            scope: {\n                fileReader: \"=\"\n            },\n            link: function (scope, element) {\n                element.on('change', function (changeEvent) {\n                    var files = changeEvent.target.files;\n                    if (files.length) {\n                        var r = new FileReader();\n\n                        r.onload = function (e) {\n                            var contents = e.target.result;\n                            scope.$apply(function () {\n                                scope.fileReader = contents;\n                            });\n                        };\n\n                        r.readAsText(files[0]);\n                    }\n                });\n            }\n        };\n    })\n\n\n;\n\n'use strict';\n\nangular.module('outstanding.pages.landing', [\n    'outstanding.calendar',\n    'outstanding.date_details',\n    'outstanding.uploader',\n    'ui.router'\n])\n\n    .config(['$stateProvider', function ($stateProvider) {\n\n        $stateProvider\n            .state('landing', {\n                url: '/landing',\n                templateUrl: 'landing/landing.html',\n                controller: 'LandingPageCtrl'\n            })\n        ;\n    }])\n\n    .controller('LandingPageCtrl', ['$scope', 'DataFactory', function ($scope, DataFactory) {\n\n        (function _init() {\n            $scope.DataFactory = DataFactory;\n            $scope.isUtc = false;\n        })();\n\n    }])\n;\n"],"sourceRoot":"/source/"}