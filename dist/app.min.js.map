{"version":3,"sources":["app.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","factory","$rootScope","COLS","CONTRACT","DATE","TIME","AMOUNT","exports","data","parsedData","selectedDate","parseData","getCol","colNum","isExcludeTitle","result","start","i","length","row","push","getRow","rowNum","getContractCol","getDateCol","getTimeCol","getAmountCol","getRowByDateString","dateStr","getContractVal","getDateVal","getTimeVal","getAmountVal","$watch","value","oldValue","state","url","templateUrl","controller","$scope","DataFactory","isUtc","constant","DAY_EVENT_FIELDS","MONTH_NAMES","_getDaysInMonth","month","year","date","Date","isUTC","getUTCDate","getDate","_getDays","monthNum","yearNum","from","to","_getMonthNumber","datetime","isUserView","getUTCMonth","getMonth","_getDayNumber","_getYearNumber","getUTCFullYear","getFullYear","_getMonthList","dateTimesList","parseDateStr","cb","datesCol","dateString","parsed","match","DATE_REGEXP","getTime","RegExp","dates","years","setUTC","setDates","makeYearsList","insertDataToDates","event","slice","dayNum","events","getTotalForDay","eventsList","fieldName","getMonthName","num","getDayOfWeek","getUTCDay","getDay","days","directive","CalendarFactory","DAYS_OF_WEEK","restrict","replace","scope","source","selected","link","initFactory","sourceData","setSelectedDate","day","filter","timeStr","separator","substr","lastIndexOf","storage","fileReader","element","on","changeEvent","files","target","r","FileReader","onload","e","contents","$apply","readAsText"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n\nangular.module('outstanding', [\n    //modules\n    'outstanding.templates',\n\n    //pages\n    'outstanding.pages.landing',\n\n    //factories\n    'outstanding.data',\n\n    //external libs\n    'ngAnimate',\n    'ui.router',\n    'anim-in-out',\n    'angular-loading-bar'//,\n    //'ui.bootstrap',\n\n])\n\n    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n        $urlRouterProvider.otherwise('/landing');\n    }])\n;\n\n'use strict';\n\nangular.module('outstanding.data', [])\n\n    .factory('DataFactory', ['$rootScope', function ($rootScope) {\n\n        var COLS = {\n            CONTRACT: 0,\n            DATE: 1,\n            TIME: 2,\n            AMOUNT: 3\n        };\n\n        var exports = {\n            data: [],\n            parsedData: [],\n            selectedDate: null,\n            parseData: function (data) {\n                //TODO (S.Panfilov) just a mock\n                return [\n                    ['Contract', 'Date', 'Time', 'Amount'],\n                    [14851, '20/05/2016', '12:04:78.594', 1405.61],\n                    [35156, '20/05/2016', '12:37:35.298', 23415.51],\n                    [29526, '22/05/2016', '15:24:31.562', 5296.15],\n                    [29586, '23/05/2016', '11:27:25.158', 18150.57],\n                    [56556, '04/06/2016', '09:51:21.565', 9385.19]\n                ];\n            },\n            getCol: function (parsedData, colNum, isExcludeTitle) {\n                var result = [];\n                var start = (isExcludeTitle) ? 1 : 0;\n\n                for (var i = start; i < parsedData.length; i++) {\n                    var row = parsedData[i];\n                    result.push(row[colNum]);\n                }\n                return result;\n            },\n            getRow: function (parsedData, rowNum) {\n                return parsedData[rowNum];\n            },\n            getContractCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.CONTRACT, isExcludeTitle);\n            },\n            getDateCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.DATE, isExcludeTitle);\n            },\n            getTimeCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.TIME, isExcludeTitle);\n            },\n            getAmountCol: function (parsedData, isExcludeTitle) {\n                return exports.getCol(parsedData, COLS.AMOUNT, isExcludeTitle);\n            },\n            getRowByDateString: function (dateStr) {\n                var start = 1; //exclude titles\n                for (var i = start; i < exports.parsedData.length; i++) {\n                    var row = exports.parsedData[i];\n                    if (row[COLS.DATE] === dateStr){\n                        return row;\n                    }\n                }\n\n                //TODO (S.Panfilov) throw error here\n            },\n            getContractVal: function (row) {\n                return row[COLS.CONTRACT];\n            },\n            getDateVal: function (row) {\n                return row[COLS.DATE];\n            },\n            getTimeVal: function (row) {\n                return row[COLS.TIME];\n            },\n            getAmountVal: function (row) {\n                return row[COLS.AMOUNT];\n            }\n        };\n\n        $rootScope.$watch(function () {\n            return exports.data;\n        }, function (value, oldValue) {\n            if (!value || value === oldValue) return;\n\n            exports.parsedData = exports.parseData(value);\n        }, true);\n\n        return exports;\n    }])\n\n;\n\n'use strict';\n\nangular.module('outstanding.pages.landing', [\n    'outstanding.calendar',\n    'outstanding.date_details',\n    'outstanding.uploader',\n    'ui.router'\n])\n\n    .config(['$stateProvider', function ($stateProvider) {\n\n        $stateProvider\n            .state('landing', {\n                url: '/landing',\n                templateUrl: 'landing/landing.html',\n                controller: 'LandingPageCtrl'\n            })\n        ;\n    }])\n\n    .controller('LandingPageCtrl', ['$scope', 'DataFactory', function ($scope, DataFactory) {\n\n        (function _init() {\n            $scope.DataFactory = DataFactory;\n            $scope.isUtc = false;\n        })();\n\n    }])\n;\n\n'use strict';\n\nangular.module('outstanding.calendar', [])\n\n    .constant('DAY_EVENT_FIELDS', {\n        CONTRACT: 'contract',\n        AMOUNT: 'amount',\n        DATE: 'date',\n        TIME: 'time'\n    })\n\n    .constant('DAYS_OF_WEEK', [\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sun'\n    ])\n\n    .constant('MONTH_NAMES', [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ])\n\n    .factory('CalendarFactory', ['DataFactory', 'DAY_EVENT_FIELDS', 'MONTH_NAMES', function (DataFactory, DAY_EVENT_FIELDS, MONTH_NAMES) {\n\n        function _getDaysInMonth(month, year) {\n            var date = new Date(year, month + 1, 0);\n            if (!exports.isUTC) {\n                return date.getDate();\n            } else {\n                return date.getUTCDate();\n            }\n        }\n\n        function _getDays(monthNum, yearNum) {\n            var result = {};\n            var from = 1;\n            var to = _getDaysInMonth(monthNum, yearNum);\n\n            for (var i = from; i <= to; i++) {\n                result[i] = {};\n            }\n\n            return result;\n        }\n\n        function _getMonthNumber(datetime, isUserView) {\n            var date = new Date(datetime);\n            var result;\n            if (!exports.isUTC) {\n                result = date.getMonth();\n            } else {\n                result = date.getUTCMonth();\n            }\n\n            result += (isUserView) ? 1 : 0;\n            return result;\n        }\n\n        function _getDayNumber(datetime) {\n            var date = new Date(datetime);\n            if (!exports.isUTC) {\n                return date.getDate();\n            } else {\n                return date.getUTCDate();\n            }\n        }\n\n        function _getYearNumber(datetime) {\n            var date = new Date(datetime);\n            if (!exports.isUTC) {\n                return date.getFullYear();\n            } else {\n                return date.getUTCFullYear();\n            }\n\n        }\n\n        function _getMonthList(dateTimesList, yearNum) {\n            var result = {};\n            for (var i = 0; i < dateTimesList.length; i++) {\n                var datetime = dateTimesList[i];\n                if (yearNum === _getYearNumber(datetime)) {\n                    var monthNum = _getMonthNumber(datetime, true);\n                    if (!result[monthNum]) {\n                        result[monthNum] = _getDays(monthNum - 1, yearNum);\n                    }\n                }\n            }\n\n            return result;\n        }\n\n        var DATE_REGEXP = new RegExp(/\\d+/g);\n\n        function parseDateStr(data, cb) {\n            var datesCol = DataFactory.getDateCol(data, true);\n\n            for (var i = 0; i < datesCol.length; i++) {\n                var dateString = datesCol[i];\n                var parsed = dateString.match(DATE_REGEXP);\n                var date = new Date(parsed[2], parsed[1] - 1, parsed[0]);\n                if (cb) cb(date.getTime(), parsed);\n            }\n        }\n\n        var exports = {\n            dates: [],\n            years: [],\n            isUTC: false,\n            setUTC: function (isUTC) {\n                exports.isUTC = isUTC || false;\n            },\n            setDates: function (data) {\n                exports.dates = [];\n                parseDateStr(data, function (date) {\n                    exports.dates.push(date);\n                });\n            },\n            makeYearsList: function () {\n                var years = {};\n\n                for (var i = 0; i < exports.dates.length; i++) {\n                    var datetime = exports.dates[i];\n                    var yearNum = _getYearNumber(datetime);\n                    if (!years[yearNum]) { //TODO (S.Panfilov) what if year exist?\n                        years[yearNum] = _getMonthList(exports.dates, yearNum);\n                    }\n                }\n\n                exports.years = years;\n\n            },\n            insertDataToDates: function (data) {\n                var start = 1; //beacuse 0 - is a title row\n                for (var i = start; i < data.length; i++) {\n                    var row = data[i];\n                    var event = {};\n\n                    var dateString = DataFactory.getDateVal(row);\n                    var parsed = dateString.match(DATE_REGEXP);\n                    var date = new Date(parsed[2], parsed[1] - 1, parsed[0]);\n                    var datetime = date.getTime();\n\n                    var yearNum = '' + _getYearNumber(datetime);\n                    var monthNum = ('0' + _getMonthNumber(datetime, true)).slice(-2);\n                    var dayNum = ('0' + _getDayNumber(datetime)).slice(-2);\n\n                    exports.years[+yearNum][+monthNum][+dayNum].events = exports.years[+yearNum][+monthNum][+dayNum].events || [];\n                    event[DAY_EVENT_FIELDS.CONTRACT] = DataFactory.getContractVal(row);\n                    event[DAY_EVENT_FIELDS.TIME] = DataFactory.getTimeVal(row);\n                    event[DAY_EVENT_FIELDS.AMOUNT] = DataFactory.getAmountVal(row);\n                    exports.years[+yearNum][+monthNum][+dayNum].events.push(event);\n                }\n            },\n            getTotalForDay: function (eventsList, fieldName) {\n                if (!eventsList) return;\n\n                var result = 0;\n                for (var i = 0; i < eventsList.length; i++) {\n                    var event = eventsList[i];\n                    result += event[fieldName];\n                }\n\n                return result;\n            },\n            getMonthName: function (num) {\n                return MONTH_NAMES[num - 1];\n            },\n            getDayOfWeek: function (monthNum, yearNum) {\n                var result;\n                var date = new Date(+yearNum, +monthNum -1, 1);\n                if (!exports.isUTC) {\n                    result =  date.getDay();\n                } else {\n                    result =  date.getUTCDay();\n                }\n\n                var days = [6,0,1,2,3,4,5];//this is a hack to makes week start from Mon (btw can be refactored)\n                return days[result];\n            }\n        };\n\n        return exports;\n    }])\n\n    .directive('calendar', ['CalendarFactory', 'DAY_EVENT_FIELDS', 'DAYS_OF_WEEK', function (CalendarFactory, DAY_EVENT_FIELDS, DAYS_OF_WEEK) {\n        return {\n            restrict: 'E',\n            replace: true,\n            templateUrl: 'calendar/calendar.html',\n            scope: {\n                source: '=',\n                selected: '=',\n                isUtc: '='\n            },\n            link: function (scope) {\n\n                scope.setSelectedDate = function (day, month, year) {\n                    scope.selected = {\n                        day: day,\n                        month: month,\n                        year: year,\n                        data: CalendarFactory.years[year][month][day]\n                    };\n                };\n\n                scope.$watch('source', function (value, oldValue) {\n                        if (!value || value === oldValue) return;\n                        initFactory(value);\n                    }\n                );\n\n                function initFactory(sourceData) {\n                    CalendarFactory.setUTC(scope.isUtc);\n                    CalendarFactory.setDates(sourceData);\n                    CalendarFactory.makeYearsList();\n                    CalendarFactory.insertDataToDates(sourceData);\n                }\n\n                (function _init() {\n                    scope.CalendarFactory = CalendarFactory;\n                    scope.DAY_EVENT_FIELDS = DAY_EVENT_FIELDS;\n                    scope.DAYS_OF_WEEK = DAYS_OF_WEEK;\n                })();\n\n            }\n        };\n    }])\n\n;\n\n'use strict';\n\nangular.module('outstanding.date_details', [\n    'outstanding.calendar'\n])\n\n    .directive('dateDetails', ['CalendarFactory', 'DAY_EVENT_FIELDS', function (CalendarFactory, DAY_EVENT_FIELDS) {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                source: '='\n            },\n            templateUrl: 'date_details/date_details.html',\n            link: function (scope) {\n\n                scope.CalendarFactory = CalendarFactory;\n                scope.DAY_EVENT_FIELDS = DAY_EVENT_FIELDS;\n            }\n        };\n    }])\n\n    .filter('pureTime', function () {\n        return function (timeStr) {\n            var start = 0;\n            var separator = '.';\n            return timeStr.substr(start, timeStr.lastIndexOf(separator));\n        };\n    })\n;\n\n'use strict';\n\nangular.module('outstanding.uploader', [])\n\n    .directive('uploader', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                storage: '='\n            },\n            templateUrl: 'uploader/uploader.html',\n            link: function (scope) {\n                scope.$watch('fileContent', function (value, oldValue) {\n                        if (value === oldValue) return;\n                        scope.storage = value;\n                    }, true\n                );\n            }\n        };\n    })\n\n    .directive('fileReader', function () {\n        return {\n            scope: {\n                fileReader: \"=\"\n            },\n            link: function (scope, element) {\n                element.on('change', function (changeEvent) {\n                    var files = changeEvent.target.files;\n                    if (files.length) {\n                        var r = new FileReader();\n\n                        r.onload = function (e) {\n                            var contents = e.target.result;\n                            scope.$apply(function () {\n                                scope.fileReader = contents;\n                            });\n                        };\n\n                        r.readAsText(files[0]);\n                    }\n                });\n            }\n        };\n    })\n\n\n;\n"],"sourceRoot":"/source/"}