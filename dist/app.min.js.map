{"version":3,"sources":["app.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","factory","exports","data","selectedDate","_getDaysInMonth","month","year","date","Date","isUTC","getUTCDate","getDate","_getDays","monthNum","yearNum","result","from","to","i","_getMonthNumber","datetime","getUTCMonth","getMonth","_getYearNumber","getUTCFullYear","getFullYear","_getMonthList","dateTimesList","length","dates","years","setUTC","setDates","makeYearsList","directive","CalendarFactory","restrict","replace","scope","source","selected","isUtc","link","_init","sourceData","calendarData","monthsList","$watch","value","oldValue","elem","console","log","storage","templateUrl","fileReader","element","on","changeEvent","files","target","r","FileReader","onload","e","contents","$apply","readAsText","state","url","controller","$scope","DataFactory"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n\nangular.module('outstanding', [\n    //modules\n    'outstanding.templates',\n\n    //pages\n    'outstanding.pages.landing',\n\n    //factories\n    'outstanding.data',\n\n    //external libs\n    'ngAnimate',\n    'ui.router',\n    'anim-in-out',\n    'angular-loading-bar'//,\n    //'ui.bootstrap',\n\n])\n\n    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n        $urlRouterProvider.otherwise('/landing');\n    }])\n;\n\n'use strict';\n\nangular.module('outstanding.data', [])\n\n    .factory('DataFactory', function () {\n\n        var exports = {\n            data: [],\n            selectedDate: null\n        };\n\n        return exports;\n    })\n\n;\n\n'use strict';\n\nangular.module('outstanding.calendar', [])\n\n    .factory('CalendarFactory', function () {\n\n        function _getDaysInMonth(month, year) {\n            var date = new Date(year, month + 1, 0);\n            if (!exports.isUTC) {\n                return date.getDate();\n            } else {\n                return date.getUTCDate();\n            }\n        }\n\n        function _getDays(monthNum, yearNum) {\n            var result = {};\n            var from = 1;\n            var to = _getDaysInMonth(monthNum, yearNum);\n\n            for (var i = from; i <= to; i++) {\n                result[i] = {};\n            }\n\n            return result;\n        }\n\n        function _getMonthNumber(datetime) {\n            var date = new Date(datetime);\n            if (!exports.isUTC) {\n                return date.getMonth();\n            } else {\n                return date.getUTCMonth();\n            }\n        }\n\n        function getMonth(datetime) {\n            var month = {\n                number: _getMonthNumber(datetime),\n                days: _getDays(datetime)\n            };\n\n            return month;\n        }\n\n        function _getYearNumber(datetime) {\n            var date = new Date(datetime);\n            if (!exports.isUTC) {\n                return date.getFullYear();\n            } else {\n                return date.getUTCFullYear();\n            }\n\n        }\n\n        function _getMonthList(dateTimesList, yearNum) {\n            var result = {};\n            for (var i = 0; i < dateTimesList.length; i++) {\n                var datetime = dateTimesList[i];\n                if (yearNum === _getYearNumber(datetime)) {\n                    var monthNum = _getMonthNumber(datetime);\n                    result[monthNum] = _getDays(monthNum, yearNum);\n                }\n            }\n\n            return result;\n        }\n\n\n        var exports = {\n            dates: [],\n            years: [],\n            isUTC: false,\n            setUTC: function (isUTC) {\n                exports.isUTC = isUTC || false;\n            },\n            setDates: function (data) {\n                //TODO (S.Panfilov)\n                //get dates col\n                //make datetime from strings\n                //set export.dates = [123123, 1232132, 3432432]\n            },\n            makeYearsList: function () {\n                var years = {};\n\n                for (var i = 0; i < exports.dates.length; i++) {\n                    var datetime = exports.dates[i];\n                    var yearNum = _getYearNumber(datetime);\n                    if (!years[yearNum]) { //TODO (S.Panfilov) what if year exist?\n                        years[yearNum] = _getMonthList(exports.dates);\n                    }\n                }\n\n            }\n        };\n\n        return exports;\n    })\n\n    .directive('calendar', ['CalendarFactory', function (CalendarFactory) {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                source: '=',\n                selected: '=',\n                isUtc: '='\n            },\n            link: function (scope) {\n\n                scope.calendarData = {\n                    monthsList: []\n                };\n\n                scope.$watch('source', function (value, oldValue) {\n                        if (value || value === oldValue) return;\n                        _init(value);\n                    }, true\n                );\n\n                function _init(sourceData) {\n                    CalendarFactory.setUTC(scope.isUtc);\n                    CalendarFactory.setDates(sourceData);\n                    CalendarFactory.makeYearsList();\n                }\n\n                scope.CalendarFactory = CalendarFactory;\n\n            }\n        };\n    }])\n\n;\n\n'use strict';\n\nangular.module('outstanding.date_details', [])\n\n    .directive('date_details', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            link: function (scope, elem) {\n                console.log('details');\n            }\n        };\n    })\n\n;\n\n'use strict';\n\nangular.module('outstanding.uploader', [])\n\n    .directive('uploader', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                storage: '='\n            },\n            templateUrl: 'uploader/uploader.html',\n            link: function (scope) {\n                scope.$watch('fileContent', function (value, oldValue) {\n                        if (value === oldValue) return;\n                        scope.storage = value;\n                    }, true\n                );\n            }\n        };\n    })\n\n    .directive('fileReader', function () {\n        return {\n            scope: {\n                fileReader: \"=\"\n            },\n            link: function (scope, element) {\n                element.on('change', function (changeEvent) {\n                    var files = changeEvent.target.files;\n                    if (files.length) {\n                        var r = new FileReader();\n\n                        r.onload = function (e) {\n                            var contents = e.target.result;\n                            scope.$apply(function () {\n                                scope.fileReader = contents;\n                            });\n                        };\n\n                        r.readAsText(files[0]);\n                    }\n                });\n            }\n        };\n    })\n\n\n;\n\n'use strict';\n\nangular.module('outstanding.pages.landing', [\n    'outstanding.calendar',\n    'outstanding.date_details',\n    'outstanding.uploader',\n    'ui.router'\n])\n\n    .config(['$stateProvider', function ($stateProvider) {\n\n        $stateProvider\n            .state('landing', {\n                url: '/landing',\n                templateUrl: 'landing/landing.html',\n                controller: 'LandingPageCtrl'\n            })\n        ;\n    }])\n\n    .controller('LandingPageCtrl', ['$scope', 'DataFactory', function ($scope, DataFactory) {\n\n        (function _init() {\n            $scope.DataFactory = DataFactory;\n            $scope.isUtc = false;\n        })();\n\n    }])\n;\n"],"sourceRoot":"/source/"}